services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: runplanprod
      POSTGRES_USER: runplan_user
      POSTGRES_PASSWORD: runplan_secure_password_123
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "5433:5432"
    networks:
      - gpx-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U runplan_user -d runplanprod"]
      interval: 5s
      timeout: 5s
      retries: 5

  # PostgreSQL Manager - Web UI for database management
  pgmanager:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@runplanprod.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5051:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - gpx-network
    depends_on:
      database:
        condition: service_healthy

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./backend:/app
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://runplan_user:runplan_secure_password_123@database:5432/runplanprod
      - JWT_SECRET_KEY=your-super-secure-jwt-secret-key-change-in-production
    networks:
      - gpx-network
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health').read()"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: ./frontend
    ports:
      - "3450:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - gpx-network
    environment:
      - NODE_ENV=production

networks:
  gpx-network:
    driver: bridge

volumes:
  gpx-data:
  postgres_data:
  pgadmin_data: